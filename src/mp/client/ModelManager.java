
package mp.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ModelManager", targetNamespace = "http://manager.mp/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ModelManager {


    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAvailModelCount", targetNamespace = "http://manager.mp/", className = "mp.client.GetAvailModelCount")
    @ResponseWrapper(localName = "getAvailModelCountResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetAvailModelCountResponse")
    public int getAvailModelCount();

    /**
     * 
     * @param arg0
     * @return
     *     returns mp.client.ModelInfoBean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getModelInfo", targetNamespace = "http://manager.mp/", className = "mp.client.GetModelInfo")
    @ResponseWrapper(localName = "getModelInfoResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetModelInfoResponse")
    public ModelInfoBean getModelInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "StartModel")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "StartModel", targetNamespace = "http://manager.mp/", className = "mp.client.StartModel")
    @ResponseWrapper(localName = "StartModelResponse", targetNamespace = "http://manager.mp/", className = "mp.client.StartModelResponse")
    public String startModel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetFormDescr")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetFormDescr", targetNamespace = "http://manager.mp/", className = "mp.client.GetFormDescr")
    @ResponseWrapper(localName = "GetFormDescrResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetFormDescrResponse")
    public String getFormDescr(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetFormDescrAsByteArray")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetFormDescrAsByteArray", targetNamespace = "http://manager.mp/", className = "mp.client.GetFormDescrAsByteArray")
    @ResponseWrapper(localName = "GetFormDescrAsByteArrayResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetFormDescrAsByteArrayResponse")
    public byte[] getFormDescrAsByteArray(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "CreateModel")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "CreateModel", targetNamespace = "http://manager.mp/", className = "mp.client.CreateModel")
    @ResponseWrapper(localName = "CreateModelResponse", targetNamespace = "http://manager.mp/", className = "mp.client.CreateModelResponse")
    public String createModel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetValue", targetNamespace = "http://manager.mp/", className = "mp.client.GetValue")
    @ResponseWrapper(localName = "GetValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetValueResponse")
    public double getValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetValueByAddress")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetValueByAddress", targetNamespace = "http://manager.mp/", className = "mp.client.GetValueByAddress")
    @ResponseWrapper(localName = "GetValueByAddressResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetValueByAddressResponse")
    public double getValueByAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetBooleanValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetBooleanValue", targetNamespace = "http://manager.mp/", className = "mp.client.GetBooleanValue")
    @ResponseWrapper(localName = "GetBooleanValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetBooleanValueResponse")
    public boolean getBooleanValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetIntValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetIntValue", targetNamespace = "http://manager.mp/", className = "mp.client.GetIntValue")
    @ResponseWrapper(localName = "GetIntValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetIntValueResponse")
    public int getIntValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetStringValueByAddress")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetStringValueByAddress", targetNamespace = "http://manager.mp/", className = "mp.client.GetStringValueByAddress")
    @ResponseWrapper(localName = "GetStringValueByAddressResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetStringValueByAddressResponse")
    public String getStringValueByAddress(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetStringValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetStringValue", targetNamespace = "http://manager.mp/", className = "mp.client.GetStringValue")
    @ResponseWrapper(localName = "GetStringValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetStringValueResponse")
    public String getStringValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "StartModelByGuid")
    @RequestWrapper(localName = "StartModelByGuid", targetNamespace = "http://manager.mp/", className = "mp.client.StartModelByGuid")
    @ResponseWrapper(localName = "StartModelByGuidResponse", targetNamespace = "http://manager.mp/", className = "mp.client.StartModelByGuidResponse")
    public void startModelByGuid(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg0
     */
    @WebMethod(operationName = "StopModel")
    @RequestWrapper(localName = "StopModel", targetNamespace = "http://manager.mp/", className = "mp.client.StopModel")
    @ResponseWrapper(localName = "StopModelResponse", targetNamespace = "http://manager.mp/", className = "mp.client.StopModelResponse")
    public void stopModel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod(operationName = "PauseModel")
    @RequestWrapper(localName = "PauseModel", targetNamespace = "http://manager.mp/", className = "mp.client.PauseModel")
    @ResponseWrapper(localName = "PauseModelResponse", targetNamespace = "http://manager.mp/", className = "mp.client.PauseModelResponse")
    public void pauseModel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod(operationName = "ResumeModel")
    @RequestWrapper(localName = "ResumeModel", targetNamespace = "http://manager.mp/", className = "mp.client.ResumeModel")
    @ResponseWrapper(localName = "ResumeModelResponse", targetNamespace = "http://manager.mp/", className = "mp.client.ResumeModelResponse")
    public void resumeModel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetErrorString")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetErrorString", targetNamespace = "http://manager.mp/", className = "mp.client.GetErrorString")
    @ResponseWrapper(localName = "GetErrorStringResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetErrorStringResponse")
    public String getErrorString(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     */
    @WebMethod(operationName = "GetBlockIndex")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetBlockIndex", targetNamespace = "http://manager.mp/", className = "mp.client.GetBlockIndex")
    @ResponseWrapper(localName = "GetBlockIndexResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetBlockIndexResponse")
    public int getBlockIndex(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetBlockCount")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetBlockCount", targetNamespace = "http://manager.mp/", className = "mp.client.GetBlockCount")
    @ResponseWrapper(localName = "GetBlockCountResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetBlockCountResponse")
    public int getBlockCount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "SendDoubleValue")
    @RequestWrapper(localName = "SendDoubleValue", targetNamespace = "http://manager.mp/", className = "mp.client.SendDoubleValue")
    @ResponseWrapper(localName = "SendDoubleValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.SendDoubleValueResponse")
    public void sendDoubleValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        double arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "SendBooleanValue")
    @RequestWrapper(localName = "SendBooleanValue", targetNamespace = "http://manager.mp/", className = "mp.client.SendBooleanValue")
    @ResponseWrapper(localName = "SendBooleanValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.SendBooleanValueResponse")
    public void sendBooleanValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        boolean arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "IsConnectionEnabled")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "IsConnectionEnabled", targetNamespace = "http://manager.mp/", className = "mp.client.IsConnectionEnabled")
    @ResponseWrapper(localName = "IsConnectionEnabledResponse", targetNamespace = "http://manager.mp/", className = "mp.client.IsConnectionEnabledResponse")
    public boolean isConnectionEnabled(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "IsManagingEnabled")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "IsManagingEnabled", targetNamespace = "http://manager.mp/", className = "mp.client.IsManagingEnabled")
    @ResponseWrapper(localName = "IsManagingEnabledResponse", targetNamespace = "http://manager.mp/", className = "mp.client.IsManagingEnabledResponse")
    public boolean isManagingEnabled(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetValueType")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetValueType", targetNamespace = "http://manager.mp/", className = "mp.client.GetValueType")
    @ResponseWrapper(localName = "GetValueTypeResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetValueTypeResponse")
    public int getValueType(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "FireBlockEvent")
    @RequestWrapper(localName = "FireBlockEvent", targetNamespace = "http://manager.mp/", className = "mp.client.FireBlockEvent")
    @ResponseWrapper(localName = "FireBlockEventResponse", targetNamespace = "http://manager.mp/", className = "mp.client.FireBlockEventResponse")
    public void fireBlockEvent(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "Compare")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Compare", targetNamespace = "http://manager.mp/", className = "mp.client.Compare")
    @ResponseWrapper(localName = "CompareResponse", targetNamespace = "http://manager.mp/", className = "mp.client.CompareResponse")
    public int compare(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Variable arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "IsArray")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "IsArray", targetNamespace = "http://manager.mp/", className = "mp.client.IsArray")
    @ResponseWrapper(localName = "IsArrayResponse", targetNamespace = "http://manager.mp/", className = "mp.client.IsArrayResponse")
    public boolean isArray(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetArrayDimensionCount")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetArrayDimensionCount", targetNamespace = "http://manager.mp/", className = "mp.client.GetArrayDimensionCount")
    @ResponseWrapper(localName = "GetArrayDimensionCountResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetArrayDimensionCountResponse")
    public int getArrayDimensionCount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetArrayDimensionLength")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetArrayDimensionLength", targetNamespace = "http://manager.mp/", className = "mp.client.GetArrayDimensionLength")
    @ResponseWrapper(localName = "GetArrayDimensionLengthResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetArrayDimensionLengthResponse")
    public int getArrayDimensionLength(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetArrayValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetArrayValue", targetNamespace = "http://manager.mp/", className = "mp.client.GetArrayValue")
    @ResponseWrapper(localName = "GetArrayValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetArrayValueResponse")
    public double getArrayValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        List<Integer> arg2)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "IsHistoryExists")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "IsHistoryExists", targetNamespace = "http://manager.mp/", className = "mp.client.IsHistoryExists")
    @ResponseWrapper(localName = "IsHistoryExistsResponse", targetNamespace = "http://manager.mp/", className = "mp.client.IsHistoryExistsResponse")
    public boolean isHistoryExists(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1)
        throws ModelException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws ModelException_Exception
     */
    @WebMethod(operationName = "GetHistoryStringValue")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetHistoryStringValue", targetNamespace = "http://manager.mp/", className = "mp.client.GetHistoryStringValue")
    @ResponseWrapper(localName = "GetHistoryStringValueResponse", targetNamespace = "http://manager.mp/", className = "mp.client.GetHistoryStringValueResponse")
    public String getHistoryStringValue(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        ModelAddress arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2)
        throws ModelException_Exception
    ;

}
