<?xml version='1.0' encoding='Windows-1251'?>
<!-- Пример описания файла пользовательской формы-->
<!-- -->
<Form classname = "mp.gui.StandartForm"
  title = ""
  sizex = "" sizey = ""
  model = "Название модели">
  <!-- Комментарий для поля class. Предполагается, что могут существовать несколько моделей поведения пользовательской
  формы. Для взаимодействия с пользователем будет создаваться такая форма (или апплет), которая соответствует
  указанному здесь имени.
   -->
 <TabSheets>
   <!-- TabSheets - это обязательный элемент, контейнер закладок.Может содержать неограниченное количество закладок.
   На закладках и будут размещаться пользовательские компоненты
    -->
   <TabSheet title = "Закладка 1">
     <!--  Label - простое поле для вывода на форму значения  одного параметра модели.
     block - название блока.
     blockIndex - индекс блока. Нужен для того случая, когда в модели присутствуют несколько блоков с одним и тем
     же именем. Это может случиться в том случае, если в файле описания модели в атрибуте "count" блока было поставлено
     значение, большее чем  1. В данном случае этот атрибут может либо отсутствовать, либо равняться какому либо
     значению, либо содержать ключевое слово "self".
     Если этот атрибут отсутствует, то это означает, что данный блок присутствует в модели в единственном числе. Если
     же это не так, и в модели присутвует несколько блоков с таким именем, то программа выдаст ошибку и не будет дальше
     создавать форму.
     Ключевое слово "self" означает, что  данные будут браться из блока, которым управляет пользователь, для которого
     и создается данная форма. Если пользователь не управляет ни одним блоком с указанным именем, то сгенерируется
     ошибочная ситуация и программа прекратит создание формы
     Существует еще одно ключевое слово для атрибута "Index" - слово all, то есть все блоки. Но в этом элементе
     интерфейса оно не используется.
     -->
     <Label caption = "Var1"
       block = "Блок2"
       blockindex = "-1"
       param = "var1"
       x = "1"
       y = "1"
       width = "100"
       height = "20"
       />
     <!-- Элемент для ввода одного значения и отправки его в модель. Смысл атрибутов точно такой же, как и у элемента
     Label.
     -->
     <EditBox caption = "Название поля ввода" block = "Блок1" blockindex = "" param = "Название параметра блока"
       x = "1"
       y = "21"
       width = "300"
       height = "25"
       />
     <Label caption = "Var2"
       block = "Блок2"
       blockindex = "-1"
       param = "var2"
       x = "1"
       y = "45"
       width = "200"
       height = "20"
       />
     <!-- Элемент, отвечающий за построение графиков. На одном элементе  может выводиться несколько графиков
     различных функций.
     -->
     <Graphic caption = "График 1"
       x = "1"
       y = "70"
       width = "300"
       height = "260"
       >
       <!-- Описание одной из функций. В объекте "Graph" может быть неограниченное количество таких функций.
       Данное описание имеет одну особенность - X и Y кординаты могут браться из совершенно различных блоков.
       При таком описании в атрибутах "blockindex" допустимы любые значения, кроме "all", поскольку описание 
       предполагает фиксированное количество отображаемых функций
       -->
       <Func caption= "F1(x,y)">
         <AxisX block = "блок1" blockindex = "1" param = "var2"/>
         <AxisY block = "блок2" blockindex = "1" param = "var1"/>
       </Func>
       <Func caption= "F2(x,y)">
         <AxisX block = "блок3" blockindex = "1" param = "var2"/>
         <AxisY block = "блок4" blockindex = "1" param = "var1"/>
       </Func>
     </Graphic>
     <!--  Другой вариант использования элемента Graph.
     При таком описании будут игнорироваться описания всех функций, которые будут описываться в дочерних нодах
     -->
     <Graphic caption = "" block = "" blockindex = "all" axisx = "var1" axisy = "var2"/>
     <!-- Extention является специальным маркером для пользовательских классов.
     Разработчик может создать собственный класс (по определенным условиям) и скомпилировать проект вместе с
     этим классом. При разборе файла описания формы будет создан экземпляр класса, имя которого указано в
     атрибуте "classname"
     -->
     <Extention classname = "Название класса"/>

      <!--Описание элемента, выводящего на форму двумерную таблицу, в которой информация из каждого блока
      располагается в одной строке. 
      -->
     <Table caption = "Заголовок таблицы"
       x = "1"
       y = "70"
       width = "300"
       height = "260">
       <!--Определение колонок таблицы.-->
       <ColumnsList>
         <Column caption = "заголовок колонки" param = "название параметра блока"/>
       </ColumnsList>
       <!--Определение источников данных для таблицы. В таблицу могут выводиться данные из блоков разных типов,
       главное, чтобы выводимые параметры блоков имели одинаковые названия-->
       <BlockList>
         <Block name = "Название блока" blockindex = "индекс блока, либо слово All, тогда в таблицу выводятся все блоки"/>
       </BlockList>
     </Table>

     <!--Таблица, в которой данные, относящиеся к одному блоку, располагаются в столбце
     -->
     <ListTable caption = "Заголовок таблицы"
       x = "1"
       y = "70"
       width = "300"
       height = "260">
       <!--Определение строк таблицы.-->
       <RowsList>
         <Row caption = "наименование строки" param = "название параметра блока"/>
       </RowsList>
       <!--Определение источников данных для таблицы. В таблицу могут выводиться данные из блоков разных типов,
       главное, чтобы выводимые параметры блоков имели одинаковые названия-->
       <BlockList>
         <Block name = "Название блока" blockindex = "индекс блока"/>
       </BlockList>
       
     </ListTable>

     <!-- Компонент, отображающий анимацию.
      Основные характеристики компонента:
      - может рисовать произвольные фигуры
      - может организовывать движение фигур
      - данные для рисования фигур могут браться из неограниченного количества блоков
      - блоки могут быть разных типов
      - фигуры могут быть разных типов (динамическое изменение фигур не предусмотрено). Динамическое изменение - это
      ситуация, при которой один блок мог прорисовываться фигурой одного типа, а потом, в ходе работы модели, стал
      прорисовываться фигурой другого типа. 
     -->
     <Animation name = "Заголовок для анимации"
       x = "1"
       y = "70"
       width = "300"
       height = "260"
       initXCoord = "0"
       initYCoord = "0"
       initWidth = "100"
       initHeight = "100"
       resizeFlag = "true"      
             >
       <!-- Определение одной из рисуемых фигур
       Значение из атрибута caption будет выводиться в легенде. Пока не используется
       Значение в атрибуте type определяет тип фигруы. Возможные значения: circle, rectangle. В дальнейшем здесь
       планируется добавить возможность для добавления собственных классов, не включенных в ядро системы
      Атрибут blockIndex может содержать слово All, тогда выводиться будут все блоки 
       -->
       <Figure caption = "название фигры" type = "circle"
               x = "название параметра"
               y = "название параметра"
               size = "название параметра"
               width = "название параметра"
               height = "название параметра"
               colour = "название параметра"
               block = "название блока"
               blockindex = "индекс блока"
               >

         <!-- Список дополнительных параметров. Для каждой фигруры может быть список дополнительных параметров, каждый
         из которых будет предан в объект, отвечающий за отображение фигуры (пока не реализовано)
         -->
         <Param name = "название дополнительного параметра" paramName = "название параметра в блоке"/>
       </Figure>

     </Animation>

   </TabSheet>
   <TabSheet title = "Закладка 2">

   </TabSheet>
 </TabSheets>

</Form>